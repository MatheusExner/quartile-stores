{
	"info": {
		"_postman_id": "cf7bc152-9a2d-44cd-aeeb-c1435a1dbc52",
		"name": "Quartile Stores Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "6009813"
	},
	"item": [
		{
			"name": "Companies",
			"item": [
				{
					"name": "Create Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code >= 200 && pm.response.code < 300) {",
									"    try {",
									"        const response = pm.response.json();",
									"        const companyId = response.id || response.data?.id;",
									"        if (companyId) {",
									"            pm.environment.set('companyId', companyId);",
									"            pm.collectionVariables.set('companyId', response.id); // persists across the collection",
									"            console.log('✅ companyId set:', companyId);",
									"        } else {",
									"            console.log('⚠️ No ID found in response:', response);",
									"        }",
									"    } catch (error) {",
									"        console.log('❌ Error parsing response:', error);",
									"    }",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Company contoso 4\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/Company",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Company"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Companies",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Company",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Company"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Company by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Company/{{companyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Company",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Company",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{companyId}}\",\n    \"name\": \"Company\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/Company/{{companyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Company",
								"{{companyId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Company",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 204) {",
									"    pm.variables.unset('companyId');",
									"    pm.environment.unset('companyId');",
									"    pm.collectionVariables.unset('companyId');",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Company/{{companyId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Company",
								"{{companyId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Stores",
			"item": [
				{
					"name": "Create Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code >= 200 && pm.response.code < 300) {",
									"    try {",
									"        const response = pm.response.json();",
									"        const companyId = response.id || response.data?.id;",
									"        if (companyId) {",
									"            pm.environment.set('storeId', companyId);",
									"            pm.collectionVariables.set('storeId', response.id); // persists across the collection",
									"            console.log('✅ storeId set:', companyId);",
									"        } else {",
									"            console.log('⚠️ No ID found in response:', response);",
									"        }",
									"    } catch (error) {",
									"        console.log('❌ Error parsing response:', error);",
									"    }",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Store Contoso\",\n    \"address\": \"123 Main Street\",\n    \"city\": \"New York\",\n    \"country\": \"USA\",\n    \"companyId\": \"{{companyId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/Store",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Store"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Stores",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Store",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Store"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Store by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Store/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Store",
								"{{storeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Store",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Store Contoso update\",\n    \"address\": \"123 Main Street\",\n    \"city\": \"New York\",\n    \"country\": \"USA\",\n    \"companyId\": \"{{companyId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/v1/Store/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"Store",
								"{{storeId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 204) {",
									"    pm.variables.unset('storeId');",
									"    pm.environment.unset('storeId');",
									"    pm.collectionVariables.unset('storeId');",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/v1/Store/{{storeId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"v1",
								"Store",
								"{{storeId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Create Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code >= 200 && pm.response.code < 300) {",
									"    try {",
									"        const response = pm.response.json();",
									"        const companyId = response.id || response.data?.id;",
									"        if (companyId) {",
									"            pm.environment.set('productId', companyId);",
									"            pm.collectionVariables.set('productId', response.id); // persists across the collection",
									"            console.log('✅ productId set:', companyId);",
									"        } else {",
									"            console.log('⚠️ No ID found in response:', response);",
									"        }",
									"    } catch (error) {",
									"        console.log('❌ Error parsing response:', error);",
									"    }",
									"}",
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Product contos 1\",\n    \"price\": 999.99,\n    \"description\": \"Product contoso desc\",\n    \"storeId\": \"{{storeId}}\"\n}"
						},
						"url": {
							"raw": "{{functionUrl}}/api/products",
							"host": [
								"{{functionUrl}}"
							],
							"path": [
								"api",
								"products"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Products by Store",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{functionUrl}}/api/products?storeId={{storeId}}",
							"host": [
								"{{functionUrl}}"
							],
							"path": [
								"api",
								"products"
							],
							"query": [
								{
									"key": "storeId",
									"value": "{{storeId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{functionUrl}}/api/products/{{productId}}",
							"host": [
								"{{functionUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Product",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Product 1\",\n    \"price\": 1199.99,\n    \"description\": \"new description\",\n    \"storeId\": \"{{storeId}}\"\n}"
						},
						"url": {
							"raw": "{{functionUrl}}/api/products/{{productId}}",
							"host": [
								"{{functionUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Product",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 204) {",
									"    pm.variables.unset('productId');",
									"    pm.environment.unset('productId');",
									"    pm.collectionVariables.unset('productId');",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{functionUrl}}/api/products/{{productId}}",
							"host": [
								"{{functionUrl}}"
							],
							"path": [
								"api",
								"products",
								"{{productId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"requests": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrlStaging",
			"value": ""
		},
		{
			"key": "functionUrlStaging",
			"value": ""
		},
		{
			"key": "baseUrl",
			"value": "https://quartile-stores.azurewebsites.net/"
		},
		{
			"key": "functionUrl",
			"value": "https://quartilestores.azurewebsites.net/"
		},
		{
			"key": "companyId",
			"value": ""
		},
		{
			"key": "storeId",
			"value": ""
		},
		{
			"key": "productId",
			"value": ""
		}
	]
}
